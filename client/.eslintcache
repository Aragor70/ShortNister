[{"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\index.tsx":"1","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\App.tsx":"3","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Header.tsx":"4","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Index.tsx":"5","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Stats.tsx":"6","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\actions\\url.ts":"7","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Overview.tsx":"8","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Toplist.tsx":"9"},{"size":745,"mtime":1611787569325,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":772,"mtime":1611763284590,"results":"13","hashOfConfig":"11"},{"size":426,"mtime":1611766048035,"results":"14","hashOfConfig":"11"},{"size":3086,"mtime":1611799967936,"results":"15","hashOfConfig":"11"},{"size":1477,"mtime":1611881782916,"results":"16","hashOfConfig":"11"},{"size":1007,"mtime":1611785802347,"results":"17","hashOfConfig":"11"},{"size":1371,"mtime":1611781673082,"results":"18","hashOfConfig":"11"},{"size":964,"mtime":1611881634918,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"11ja41p",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\index.tsx",[],["40","41"],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\App.tsx",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Header.tsx",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Index.tsx",["42"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { postUrl } from '../actions/url';\r\nimport validUrl from 'valid-url'\r\nimport Toplist from './Toplist';\r\n\r\ntype IndexType = {\r\n    history: any\r\n}\r\n\r\nconst Index = ({ history }: IndexType) => {\r\n\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        longUrl: '',\r\n        customCode: ''\r\n    });\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = async(e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        await postUrl(formData, history)\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (validUrl.isUri(formData.longUrl)){\r\n            return setIsValid(true)\r\n        } else {\r\n            return setIsValid(false)\r\n        }\r\n    }, [formData.longUrl])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"section-content\">\r\n                <p>Meet Shortster</p>\r\n                    Take control of your URL address. Meet Shortster, to build a shortcut address. \r\n                    Get the quick report of the frequency. \r\n                    Right now you know how many times your partners clicked your address.\r\n\r\n\r\n\r\n                <form className=\"input-form\" onSubmit={e=> handleSubmit(e)}>\r\n                    <p style={{ position: 'relative' }}>Paste address URL\r\n\r\n                    {\r\n                        formData.longUrl.length > 0 && <button type=\"button\" className=\"clean-button\" onClick={e=> setFormData({ longUrl: '', customCode: ''})}>cancel</button>\r\n                    }\r\n                    </p>\r\n\r\n                    <input type=\"text\" name=\"longUrl\" value={ formData.longUrl || '' } onChange={e=> handleChange(e)} required />\r\n                    {\r\n                        formData.longUrl.length > 0 && isValid ? <Fragment>\r\n                            <p>Create a random 6 characters long URL shortcut</p>\r\n                            <button type=\"submit\" className=\"randomize\">\r\n                                Generate random shortcut\r\n                            </button>\r\n\r\n                            <p>or</p>\r\n\r\n                            <label>\r\n                                <p>Customize your URL shortcut (at least 4 characters long)</p>\r\n                                <p>http://localhost:5000/\r\n                                    <input type=\"text\" name=\"customCode\" value={ formData.customCode || '' } onChange={e=> handleChange(e)} />\r\n                                </p>\r\n                            </label>\r\n                            <button type=\"submit\">\r\n                                Continue\r\n                            </button>\r\n                        </Fragment>\r\n                        : null\r\n                    }\r\n                    \r\n                </form>\r\n\r\n                \r\n\r\n\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default withRouter(Index);","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Stats.tsx",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\actions\\url.ts",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Overview.tsx",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Toplist.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":15},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'Toplist' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]