[{"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\index.tsx":"1","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\App.tsx":"3","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Header.tsx":"4","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Index.tsx":"5","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Stats.tsx":"6","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\actions\\url.ts":"7","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Overview.tsx":"8","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Toplist.tsx":"9"},{"size":745,"mtime":1611787569325,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":772,"mtime":1611763284590,"results":"13","hashOfConfig":"11"},{"size":499,"mtime":1612218241252,"results":"14","hashOfConfig":"11"},{"size":3161,"mtime":1612218241252,"results":"15","hashOfConfig":"11"},{"size":4082,"mtime":1612199019949,"results":"16","hashOfConfig":"11"},{"size":1002,"mtime":1612130969473,"results":"17","hashOfConfig":"11"},{"size":3638,"mtime":1612211954009,"results":"18","hashOfConfig":"11"},{"size":979,"mtime":1612140854992,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"11ja41p",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\index.tsx",[],["41","42"],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\App.tsx",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Header.tsx",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Index.tsx",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Stats.tsx",["43"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { withRouter, match, RouteComponentProps } from 'react-router-dom';\r\nimport { getUrl } from '../actions/url';\r\nimport { History, LocationState } from 'history';\r\nimport moment from 'moment';\r\n\r\ninterface MatchParams {\r\n    code: string\r\n}\r\n\r\ninterface StatsProps extends RouteComponentProps<MatchParams> {\r\n    history: History<LocationState>,\r\n    match: any\r\n}\r\n\r\n\r\nconst Stats = ({ match, history }: StatsProps) => {\r\n\r\n    const [data, setData] = useState({\r\n        urlCode: '',\r\n        longUrl: '',\r\n        shortUrl: '',\r\n        views: '',\r\n        lastVisit: '',\r\n        date: ''\r\n    })\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        const getData = async() => {\r\n            const res: any = await getUrl(match.params.code)\r\n            \r\n            if (res) {\r\n                setData({\r\n                    urlCode: res.urlCode,\r\n                    longUrl: res.longUrl,\r\n                    shortUrl: res.shortUrl,\r\n                    views: res.views,\r\n                    lastVisit: res.lastVisit,\r\n                    date: res.date\r\n                })\r\n            }\r\n            \r\n        }\r\n        getData()\r\n\r\n        return () => {\r\n            setData({\r\n                urlCode: '',\r\n                longUrl: '',\r\n                shortUrl: '',\r\n                views: '',\r\n                lastVisit: '',\r\n                date: ''\r\n            })\r\n        }\r\n\r\n    }, [match.params.code])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"section-content\">\r\n                {\r\n                    data.urlCode ? <Fragment>\r\n                        <p>Statistical analysis</p>\r\n\r\n                        <p>Shortcut URL:</p>\r\n\r\n                            <p className=\"weightBold\">{data.shortUrl}</p>\r\n\r\n                        <p>Original URL:</p>\r\n\r\n                            <p className=\"weightBold\">{data.longUrl}</p>\r\n\r\n                        <p>Views:</p>\r\n\r\n                            <p className=\"textCenter weightBold\" style={{ fontSize: '32px'}}>{data.views}</p>\r\n\r\n                        {\r\n                            data.lastVisit && <Fragment>\r\n                                <p> The last visit was: </p>\r\n                                <p style={{textAlign: 'center'}}>\r\n                                {\r\n                                    Date.parse(data.lastVisit) < Date.now() - 86400000 ? \r\n                                    \r\n                                    `${moment(data.lastVisit).format('DD-MM-YYYY')} at ${moment(data.lastVisit).format('HH:mm:SS')}` : `Today at ${moment(data.lastVisit).format('HH:mm:SS')}` \r\n                                \r\n                                }\r\n                                </p>\r\n                                \r\n                                \r\n                            </Fragment>\r\n                        }\r\n                        {\r\n                            data.date && <Fragment>\r\n                                <p> URL registration was: </p>\r\n                                <p style={{textAlign: 'center'}}>\r\n                                {\r\n                                    Date.parse(data.date) < Date.now() - 86400000 ? \r\n                                    \r\n                                    `${moment(data.date).format('DD-MM-YYYY')} at ${moment(data.date).format('HH:mm:SS')}` : `Today at ${moment(data.date).format('HH:mm:SS')}` \r\n                                \r\n                                }\r\n                                </p>\r\n                            </Fragment>\r\n                        }\r\n                    </Fragment> : <Fragment>\r\n                        <p>Address not found.</p>\r\n                    </Fragment>\r\n                }\r\n                <div className=\"options\">\r\n                    <button onClick={e=> history.push(`/${data.urlCode}/overview`)}>Go to overview</button>\r\n                </div>\r\n                \r\n                \r\n\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default withRouter(Stats);","C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\actions\\url.ts",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Overview.tsx",[],"C:\\Users\\Nicolai\\Documents\\Shortener\\client\\src\\interface\\Toplist.tsx",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":22,"nodeType":"52","messageId":"53","endLine":2,"endColumn":27},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'match' is defined but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]